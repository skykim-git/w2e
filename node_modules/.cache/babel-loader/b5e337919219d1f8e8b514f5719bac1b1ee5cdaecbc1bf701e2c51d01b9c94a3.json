{"ast":null,"code":"import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\n\n// import todoReducer from './todoSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['todos']\n};\n\n// const persistedReducer = persistReducer(\n//   persistConfig,\n//   combineReducers({ todos: todoReducer }),\n// );\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","storage","persistStore","persistReducer","persistConfig","key","whitelist","store","reducer","persistedReducer","middleware","getDefaultMiddleware","serializableCheck","persistor"],"sources":["/Users/friday/Documents/w2e/frontend/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\n\n// import todoReducer from './todoSlice';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['todos'],\n};\n\n// const persistedReducer = persistReducer(\n//   persistConfig,\n//   combineReducers({ todos: todoReducer }),\n// );\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,QAAQ,eAAe;;AAE5D;;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXJ,OAAO;EACPK,SAAS,EAAE,CAAC,OAAO;AACrB,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAGR,cAAc,CAAC;EAClCS,OAAO,EAAEC,gBAAgB;EACzBC,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAGX,YAAY,CAACK,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}