{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx\";\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NearbyRestaurants extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurants: []\n    };\n    this.fetchNearbyRestaurants = () => {\n      const {\n        google\n      } = this.props;\n      const service = new google.maps.places.PlacesService(document.createElement('div'));\n      const request = {\n        location: this.props.google.maps.LatLng,\n        radius: 50000,\n        // Adjust the radius as needed\n        type: 'restaurant'\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          // Sort the results based on rating (or any other criteria)\n          const sortedRestaurants = results.sort((a, b) => b.rating - a.rating).slice(0, 5);\n          const restaurants = sortedRestaurants.map(place => ({\n            name: place.name,\n            rating: place.rating,\n            popularOrder: 'Your popular order here',\n            // You can get this from user reviews, for example\n            imageUrl: place.photos && place.photos[0].getUrl() // Get the first photo URL if available\n          }));\n          this.setState({\n            restaurants\n          });\n        } else {\n          console.error('Error fetching nearby restaurants:', status);\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchNearbyRestaurants();\n  }\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Restaurants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), restaurants.length > 0 ? restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", restaurant.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Popular Order: \", restaurant.popularOrder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), restaurant.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: restaurant.imageUrl,\n          alt: `Popular order at ${restaurant.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 39\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No nearby restaurants found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);","map":{"version":3,"names":["React","Component","GoogleApiWrapper","jsxDEV","_jsxDEV","NearbyRestaurants","constructor","args","state","restaurants","fetchNearbyRestaurants","google","props","service","maps","places","PlacesService","document","createElement","request","location","LatLng","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","sortedRestaurants","sort","a","b","rating","slice","map","place","name","popularOrder","imageUrl","photos","getUrl","setState","console","error","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","length","restaurant","index","src","alt","apiKey"],"sources":["/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass NearbyRestaurants extends Component {\n  state = {\n    restaurants: []\n  };\n\n  componentDidMount() {\n    this.fetchNearbyRestaurants();\n  }\n\n  fetchNearbyRestaurants = () => {\n    const { google } = this.props;\n    const service = new google.maps.places.PlacesService(document.createElement('div'));\n    const request = {\n      location: this.props.google.maps.LatLng,\n      radius: 50000, // Adjust the radius as needed\n      type: 'restaurant'\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        // Sort the results based on rating (or any other criteria)\n        const sortedRestaurants = results.sort((a, b) => b.rating - a.rating).slice(0, 5);\n\n        const restaurants = sortedRestaurants.map(place => ({\n          name: place.name,\n          rating: place.rating,\n          popularOrder: 'Your popular order here', // You can get this from user reviews, for example\n          imageUrl: place.photos && place.photos[0].getUrl() // Get the first photo URL if available\n        }));\n        this.setState({ restaurants });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  };\n\n  render() {\n    const { restaurants } = this.state;\n\n    return (\n      <div>\n        <h2>Recommended Restaurants</h2>\n        {restaurants.length > 0 ? (\n          restaurants.map((restaurant, index) => (\n            <div key={index}>\n              <h3>{restaurant.name}</h3>\n              <p>Rating: {restaurant.rating}</p>\n              <p>Popular Order: {restaurant.popularOrder}</p>\n              {restaurant.imageUrl && <img src={restaurant.imageUrl} alt={`Popular order at ${restaurant.name}`} />}\n            </div>\n          ))\n        ) : (\n          <p>No nearby restaurants found</p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}