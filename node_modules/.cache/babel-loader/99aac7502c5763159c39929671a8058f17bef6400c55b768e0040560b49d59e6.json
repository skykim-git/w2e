{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/w2e/frontend/src/components/NearbyRestaurants.jsx\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass NearbyRestaurants extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bestRestaurants: [],\n      nextPageToken: null,\n      // Initialize nextPageToken state\n      showMapModal: false,\n      // State to control visibility of the map modal\n      currentLocation: null,\n      // Store current location\n      currentIndex: 0,\n      showFirstPage: true,\n      isSpinning: false,\n      restReady: false\n    };\n    this.searchNearbyRestaurants = position => {\n      const {\n        google\n      } = this.props;\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n\n      // Create a PlacesService instance\n      const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n      // Define search parameters\n      const request = {\n        location: new google.maps.LatLng(latitude, longitude),\n        radius: 50000,\n        // Search radius in meters (adjust as needed)\n        type: 'restaurant',\n        rankBy: google.maps.places.RankBy.PROMINENCE,\n        // Sort by prominence\n        types: ['restaurant']\n      };\n\n      // Perform nearby search\n      placesService.nearbySearch(request, (results, status, pagination) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          // Filter restaurants with 4+ stars and 50+ reviews\n          const filteredRestaurants = results.filter(restaurant => {\n            return restaurant.rating >= 4.0 && restaurant.user_ratings_total >= 30 && !restaurant.name.toLowerCase().includes('hotel');\n          });\n\n          // Fetch category for each restaurant\n          const promises = filteredRestaurants.map(restaurant => {\n            return new Promise((resolve, reject) => {\n              // Get details for each restaurant\n              const detailsRequest = {\n                placeId: restaurant.place_id,\n                fields: ['name', 'types', 'reviews'] // Add 'reviews' field to retrieve reviews\n              };\n              placesService.getDetails(detailsRequest, (placeDetails, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  const category = placeDetails.types && placeDetails.types.length > 0 ? placeDetails.types[0] : 'Uncategorized';\n                  const topReview = placeDetails.reviews && placeDetails.reviews.length > 0 ? placeDetails.reviews[0] : 'null'; // Get the top review\n                  resolve({\n                    ...restaurant,\n                    category,\n                    topReview\n                  });\n                } else {\n                  console.error('Error fetching restaurant details:', status);\n                  reject(status);\n                }\n              });\n            });\n          });\n\n          // Fetch reviews for each restaurant and extract text\n          const reviewPromises = filteredRestaurants.map(restaurant => {\n            return new Promise((resolve, reject) => {\n              const detailsRequest = {\n                placeId: restaurant.place_id,\n                fields: ['reviews']\n              };\n              placesService.getDetails(detailsRequest, (placeDetails, status) => {\n                if (status === google.maps.places.PlacesServiceStatus.OK) {\n                  const reviews = placeDetails.reviews || [];\n                  const reviewTexts = reviews.map(review => review.text);\n                  resolve(reviewTexts);\n                } else {\n                  console.error('Error fetching reviews for restaurant:', status);\n                  resolve([]);\n                }\n              });\n            });\n          });\n\n          // Resolve all promises\n          Promise.all(promises, reviewPromises).then(restaurantsWithReviews => {\n            // Update state with the filtered restaurants, category, and nextPageToken\n            this.setState({\n              bestRestaurants: restaurantsWithReviews\n            });\n            this.setState({\n              restReady: true\n            });\n            // Flatten reviewTextsArray into a single array of review texts\n            const allReviewsText = reviewTextsArray.flat();\n\n            // Tokenization (split text into words)\n            const allWords = allReviewsText.flatMap(text => text.toLowerCase().split(/\\W+/));\n\n            // POS Tagging (identify nouns)\n            const nounRegex = /^N/;\n            const nouns = allWords.filter(word => nounRegex.test(word));\n\n            // Count occurrences of each noun\n            const nounCounts = {};\n            nouns.forEach(noun => {\n              nounCounts[noun] = (nounCounts[noun] || 0) + 1;\n            });\n\n            // Find most repeated noun\n            let mostRepeatedNoun;\n            let maxCount = 0;\n            Object.entries(nounCounts).forEach(([noun, count]) => {\n              if (count > maxCount) {\n                mostRepeatedNoun = noun;\n                maxCount = count;\n              }\n            });\n          }).catch(error => {\n            console.error('Error fetching restaurant details:', error);\n          });\n        } else {\n          console.error('Error fetching nearby restaurants:', status);\n        }\n      });\n    };\n    // Function to handle button click to move to the next restaurant\n    this.moveToNextRestaurant = () => {\n      this.setState(prevState => ({\n        currentIndex: prevState.currentIndex + 1\n      }));\n    };\n    // Start Page\n    this.handleButtonClick = () => {\n      this.setState(prevState => ({\n        isSpinning: !prevState.isSpinning\n      }));\n      setTimeout(() => {\n        this.setState({\n          showFirstPage: false\n        });\n      }, 3000);\n    };\n    this.renderFirstPage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: this.state.isSpinning ? \"custom-heading, spinning-text\" : \"custom-heading\",\n          style: {\n            marginTop: '50px',\n            fontSize: '200px'\n          },\n          children: \"W2E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleButtonClick,\n          style: {\n            marginTop: '20px',\n            padding: '10px',\n            backgroundColor: '#ff5722',\n            color: 'black',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this);\n    };\n  }\n  componentDidMount() {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  renderRestaurantPage() {\n    const {\n      bestRestaurants,\n      currentIndex\n    } = this.state;\n    const restaurant = bestRestaurants[currentIndex] || {};\n    // const firstSentence = restaurant.topReview.text.split(/[.!?]/);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [bestRestaurants.length - 1 >= currentIndex ?\n      /*#__PURE__*/\n      // Display restaurant details\n      _jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '0px',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"custom-heading\",\n          style: {\n            marginTop: '50px',\n            fontSize: '100px'\n          },\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '30px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: restaurant.photos && restaurant.photos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://www.google.com/maps/search/?api=1&query=${restaurant.name}&query_place_id=${restaurant.place_id}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: restaurant.photos[0].getUrl(),\n                  alt: restaurant.name,\n                  style: {\n                    width: '200px',\n                    height: '150px',\n                    marginBottom: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: '90px'\n            },\n            children: restaurant.topReview.text.split(' ').slice(0, 20).join(' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: '90px'\n            },\n            children: mostRepeatedNoun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '0px',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"custom-heading\",\n          style: {\n            marginTop: '50px',\n            fontSize: '100px'\n          },\n          children: \"Hmm...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"custom-body\",\n          style: {\n            height: '190px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          children: \"Why don't you use Google Maps now?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)\n      // Display a paragraph if no restaurants are available\n      , /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-body\",\n        onClick: this.moveToNextRestaurant,\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          backgroundColor: '#ff5722',\n          color: 'black',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Next Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  render() {\n    const {\n      showFirstPage\n    } = this.state;\n    if (showFirstPage) {\n      return this.renderFirstPage();\n    } else {\n      // if (this.restReady) {\n      return this.renderRestaurantPage();\n      // }\n    }\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","NearbyRestaurants","constructor","args","state","bestRestaurants","nextPageToken","showMapModal","currentLocation","currentIndex","showFirstPage","isSpinning","restReady","searchNearbyRestaurants","position","google","props","latitude","longitude","coords","placesService","maps","places","PlacesService","document","createElement","request","location","LatLng","radius","type","rankBy","RankBy","PROMINENCE","types","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","filteredRestaurants","filter","restaurant","rating","user_ratings_total","name","toLowerCase","includes","promises","map","Promise","resolve","reject","detailsRequest","placeId","place_id","fields","getDetails","placeDetails","category","length","topReview","reviews","console","error","reviewPromises","reviewTexts","review","text","all","then","restaurantsWithReviews","setState","allReviewsText","reviewTextsArray","flat","allWords","flatMap","split","nounRegex","nouns","word","test","nounCounts","forEach","noun","mostRepeatedNoun","maxCount","Object","entries","count","catch","moveToNextRestaurant","prevState","handleButtonClick","setTimeout","renderFirstPage","style","display","flexDirection","alignItems","justifyContent","height","children","className","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","backgroundColor","color","border","borderRadius","cursor","componentDidMount","navigator","geolocation","getCurrentPosition","log","renderRestaurantPage","marginBottom","textAlign","photos","href","target","rel","src","getUrl","alt","width","slice","join","render","apiKey"],"sources":["/Users/friday/Documents/w2e/frontend/src/components/NearbyRestaurants.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport './style.css';\n\n\nclass NearbyRestaurants extends Component {\n  state = {\n    bestRestaurants: [],\n    nextPageToken: null, // Initialize nextPageToken state\n    showMapModal: false, // State to control visibility of the map modal\n    currentLocation: null, // Store current location\n    currentIndex: 0,\n    showFirstPage: true,\n    isSpinning : false,\n    restReady : false,\n  };\n\n  componentDidMount() {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  searchNearbyRestaurants = (position) => {\n    const { google } = this.props;\n    const { latitude, longitude } = position.coords;\n\n    // Create a PlacesService instance\n    const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n    // Define search parameters\n    const request = {\n      location: new google.maps.LatLng(latitude, longitude),\n      radius: 50000, // Search radius in meters (adjust as needed)\n      type: 'restaurant',\n      rankBy: google.maps.places.RankBy.PROMINENCE, // Sort by prominence\n      types: ['restaurant'] \n    };\n\n    // Perform nearby search\n    placesService.nearbySearch(request, (results, status, pagination) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        // Filter restaurants with 4+ stars and 50+ reviews\n        const filteredRestaurants = results.filter(restaurant => {\n          return restaurant.rating >= 4.0 && restaurant.user_ratings_total >= 30 &&\n           !restaurant.name.toLowerCase().includes('hotel');\n        });\n\n        // Fetch category for each restaurant\n        const promises = filteredRestaurants.map(restaurant => {\n          return new Promise((resolve, reject) => {\n            // Get details for each restaurant\n            const detailsRequest = {\n              placeId: restaurant.place_id,\n              fields: ['name', 'types', 'reviews'] // Add 'reviews' field to retrieve reviews\n            };\n            placesService.getDetails(detailsRequest, (placeDetails, status) => {\n              if (status === google.maps.places.PlacesServiceStatus.OK) {\n                const category = placeDetails.types && placeDetails.types.length > 0 ? placeDetails.types[0] : 'Uncategorized';\n                const topReview = placeDetails.reviews && placeDetails.reviews.length > 0 ? placeDetails.reviews[0] : 'null'; // Get the top review\n                resolve({ ...restaurant, category, topReview });\n              } else {\n                console.error('Error fetching restaurant details:', status);\n                reject(status);\n              }\n            });\n          });\n        });\n\n              // Fetch reviews for each restaurant and extract text\n      const reviewPromises = filteredRestaurants.map(restaurant => {\n        return new Promise((resolve, reject) => {\n          const detailsRequest = {\n            placeId: restaurant.place_id,\n            fields: ['reviews']\n          };\n          placesService.getDetails(detailsRequest, (placeDetails, status) => {\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\n              const reviews = placeDetails.reviews || [];\n              const reviewTexts = reviews.map(review => review.text);\n              resolve(reviewTexts);\n            } else {\n              console.error('Error fetching reviews for restaurant:', status);\n              resolve([]);\n            }\n          });\n        });\n      });\n\n        // Resolve all promises\n        Promise.all(promises,reviewPromises)\n          .then(restaurantsWithReviews => {\n            // Update state with the filtered restaurants, category, and nextPageToken\n            this.setState({ bestRestaurants: restaurantsWithReviews });\n            this.setState({ restReady: true})\n                      // Flatten reviewTextsArray into a single array of review texts\n            const allReviewsText = reviewTextsArray.flat();\n\n            // Tokenization (split text into words)\n            const allWords = allReviewsText.flatMap(text => text.toLowerCase().split(/\\W+/));\n\n            // POS Tagging (identify nouns)\n            const nounRegex = /^N/;\n            const nouns = allWords.filter(word => nounRegex.test(word));\n\n            // Count occurrences of each noun\n            const nounCounts = {};\n            nouns.forEach(noun => {\n              nounCounts[noun] = (nounCounts[noun] || 0) + 1;\n            });\n\n            // Find most repeated noun\n            let mostRepeatedNoun;\n            let maxCount = 0;\n            Object.entries(nounCounts).forEach(([noun, count]) => {\n              if (count > maxCount) {\n                mostRepeatedNoun = noun;\n                maxCount = count;\n              }\n            });\n          })\n          .catch(error => {\n            console.error('Error fetching restaurant details:', error);\n          });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  }\n\n  // Function to handle button click to move to the next restaurant\n  moveToNextRestaurant = () => {\n    this.setState(prevState => ({\n      currentIndex: prevState.currentIndex + 1\n    }));\n  };\n\n  // Start Page\n  handleButtonClick = () => {\n    this.setState(prevState => ({\n      isSpinning: !prevState.isSpinning\n    }));\n    setTimeout(() => {\n      this.setState({ showFirstPage: false })\n    }, 3000);\n  };\n\n  renderFirstPage = () => {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n        <h1 className={this.state.isSpinning ? \"custom-heading, spinning-text\" : \"custom-heading\"} style={{ marginTop: '50px', fontSize: '200px' }}>W2E</h1>\n        <button onClick={this.handleButtonClick} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#ff5722', color: 'black', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Start</button>\n      </div>\n    );\n  };\n\n  \n\n  renderRestaurantPage() {\n    const { bestRestaurants, currentIndex } = this.state;\n    const restaurant = bestRestaurants[currentIndex] || {};\n    // const firstSentence = restaurant.topReview.text.split(/[.!?]/);\n  \n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {bestRestaurants.length - 1 >= currentIndex ? (\n          // Display restaurant details\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '0px', marginBottom: '0px' }}>\n            <h1 className=\"custom-heading\" style={{ marginTop: '50px', fontSize: '100px' }}>{restaurant.name}</h1>\n            <div style={{ textAlign: 'center', marginTop: '30px' }}>\n              <div>\n                {restaurant.photos && restaurant.photos.length > 0 && (\n                  <>\n                    <a href={`https://www.google.com/maps/search/?api=1&query=${restaurant.name}&query_place_id=${restaurant.place_id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <img src={restaurant.photos[0].getUrl()} alt={restaurant.name} style={{ width: '200px', height: '150px', marginBottom: '5px' }} />\n                    </a>\n                  </>\n                )}\n              </div>\n              {/* <div style={{ width: '300px', height: '200px', border: '1px solid #ccc', padding: '10px', overflow: 'auto' }}> */}\n              <p style={{ marginBottom: '90px' }}>{restaurant.topReview.text.split(' ').slice(0, 20).join(' ')}</p>\n              <p style={{ marginBottom: '90px' }}>{mostRepeatedNoun}</p>\n              {/* </div> */}\n            </div>\n          </div>\n        ) : (\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '0px', marginBottom: '0px' }}>\n              <h1 className=\"custom-heading\" style={{ marginTop: '50px', fontSize: '100px' }}>Hmm...</h1>\n              <p className=\"custom-body\" style={{ height: '190px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginTop: '20px' }}>Why don't you use Google Maps now?</p>\n            </div>\n          // Display a paragraph if no restaurants are available\n        )}\n        {/* Button to move to the next restaurant */}\n        <button className=\"custom-body\" onClick={this.moveToNextRestaurant} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#ff5722', color: 'black', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\n          Next Restaurant\n        </button>\n      </div>\n    );\n  }  \n\n\n  render() {\n    const { showFirstPage } = this.state;\n\n    if (showFirstPage) {\n      return this.renderFirstPage();\n    } else {\n      // if (this.restReady) {\n        return this.renderRestaurantPage();\n      // }\n    }\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}