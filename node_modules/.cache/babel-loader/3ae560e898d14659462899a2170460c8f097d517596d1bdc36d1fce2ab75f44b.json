{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/TaskForceOrganization/frontend/src/components/InputForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addTodo } from 'redux/operations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputForm = () => {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useDispatch();\n  const handleInputChange = e => {\n    setInputValue(e.target.value || '');\n  };\n  const addTask = () => {\n    if (inputValue.trim() === '') {\n      return toast.error('The field cannot be empty.');\n    }\n    const newTask = {\n      title: k.toString() + \": \" + inputValue.trim(),\n      completed: false\n    };\n    dispatch(addTodo(newTask));\n    // toast.success('New task added.');\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-task\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-task\",\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter task...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-task\",\n      onClick: addTask,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(InputForm, \"oJ2OWRKCjZXQYfrfZJEWXG+vXVU=\", false, function () {\n  return [useDispatch];\n});\n_c = InputForm;\nexport default InputForm;\nvar _c;\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["React","useState","useDispatch","toast","addTodo","jsxDEV","_jsxDEV","InputForm","_s","inputValue","setInputValue","dispatch","handleInputChange","e","target","value","addTask","trim","error","newTask","title","k","toString","completed","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/friday/Documents/TaskForceOrganization/frontend/src/components/InputForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { addTodo } from 'redux/operations';\n\nconst InputForm = () => {\n  const [inputValue, setInputValue] = useState('');\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value || '');\n  };\n\n  const addTask = () => {\n    if (inputValue.trim() === '') {\n      return toast.error('The field cannot be empty.');\n    }\n\n    const newTask = {\n      title: k.toString() + \": \" + inputValue.trim(),\n      completed: false,\n    };\n\n    dispatch(addTodo(newTask));\n    // toast.success('New task added.');\n    setInputValue('');\n  };\n\n  return (\n    <div className=\"add-task\">\n      <input\n        className=\"input-task\"\n        type=\"text\"\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder=\"Enter task...\"\n      />\n      <button className=\"btn-task\" onClick={addTask}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default InputForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,iBAAiB,GAAGC,CAAC,IAAI;IAC7BH,aAAa,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,IAAI,EAAE,CAAC;EACrC,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,IAAIP,UAAU,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5B,OAAOd,KAAK,CAACe,KAAK,CAAC,4BAA4B,CAAC;IAClD;IAEA,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAEC,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI,GAAGb,UAAU,CAACQ,IAAI,CAAC,CAAC;MAC9CM,SAAS,EAAE;IACb,CAAC;IAEDZ,QAAQ,CAACP,OAAO,CAACe,OAAO,CAAC,CAAC;IAC1B;IACAT,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBnB,OAAA;MACEkB,SAAS,EAAC,YAAY;MACtBE,IAAI,EAAC,MAAM;MACXX,KAAK,EAAEN,UAAW;MAClBkB,QAAQ,EAAEf,iBAAkB;MAC5BgB,WAAW,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA;MAAQkB,SAAS,EAAC,UAAU;MAACS,OAAO,EAAEjB,OAAQ;MAAAS,QAAA,EAAC;IAE/C;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,SAAS;EAAA,QAEIL,WAAW;AAAA;AAAAgC,EAAA,GAFxB3B,SAAS;AAuCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}