{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx\";\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass NearbyRestaurants extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      bestRestaurants: [],\n      nextPageToken: null // Initialize nextPageToken state\n    };\n    this.searchNearbyRestaurants = position => {\n      const {\n        google\n      } = this.props;\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n\n      // Create a PlacesService instance\n      const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n      // Define search parameters\n      const request = {\n        location: new google.maps.LatLng(latitude, longitude),\n        radius: 1000,\n        // Search radius in meters (adjust as needed)\n        type: 'restaurant',\n        rankBy: google.maps.places.RankBy.PROMINENCE // Sort by prominence\n      };\n\n      // Perform nearby search\n      placesService.nearbySearch(request, (results, status, pagination) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          // Filter restaurants with 4+ stars and 50+ reviews\n          const filteredRestaurants = results.filter(restaurant => {\n            return restaurant.rating >= 4 && restaurant.user_ratings_total >= 30;\n          });\n\n          // Update state with the filtered restaurants and nextPageToken\n          this.setState({\n            bestRestaurants: filteredRestaurants.slice(0, 3),\n            nextPageToken: pagination.hasNextPage ? pagination.nextPageToken : null\n          });\n        } else {\n          console.error('Error fetching nearby restaurants:', status);\n        }\n      });\n    };\n    this.loadNextRestaurants = () => {\n      const {\n        google\n      } = this.props;\n      const {\n        nextPageToken\n      } = this.state;\n\n      // If nextPageToken is available, fetch the next page of restaurants\n      if (nextPageToken) {\n        const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n        // Define search parameters for the next page\n        const request = {\n          pagetoken: nextPageToken\n        };\n\n        // Perform nearby search for the next page\n        placesService.nearbySearch(request, (results, status, pagination) => {\n          if (status === google.maps.places.PlacesServiceStatus.OK) {\n            // Filter restaurants with 4+ stars and 50+ reviews\n            const filteredRestaurants = results.filter(restaurant => {\n              return restaurant.rating >= 4 && restaurant.user_ratings_total >= 30;\n            });\n\n            // Update state with the next page of restaurants and nextPageToken\n            this.setState(prevState => ({\n              bestRestaurants: [...prevState.bestRestaurants, ...filteredRestaurants],\n              nextPageToken: pagination.hasNextPage ? pagination.nextPageToken : null\n            }));\n          } else {\n            console.error('Error fetching nearby restaurants:', status);\n          }\n        });\n      }\n    };\n  }\n  componentDidMount() {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  render() {\n    const {\n      bestRestaurants\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Nearby Restaurants with 4+ Stars and 50+ Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        children: bestRestaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px',\n            textAlign: 'center',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: restaurant.photos && restaurant.photos.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: restaurant.photos[0].getUrl(),\n                alt: restaurant.name,\n                style: {\n                  width: '100%',\n                  height: 'auto',\n                  marginBottom: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), restaurant.photos.length > 1 && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: restaurant.photos[1].getUrl(),\n                alt: restaurant.name,\n                style: {\n                  width: '100%',\n                  height: 'auto',\n                  marginBottom: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold',\n              marginTop: '0'\n            },\n            children: restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [restaurant.rating, \" stars (\", restaurant.user_ratings_total, \" reviews)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), this.state.nextPageToken && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loadNextRestaurants,\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          backgroundColor: '#ff5722',\n          color: 'black',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Hit me up for more restaurants!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);","map":{"version":3,"names":["React","Component","GoogleApiWrapper","jsxDEV","_jsxDEV","Fragment","_Fragment","NearbyRestaurants","constructor","args","state","bestRestaurants","nextPageToken","searchNearbyRestaurants","position","google","props","latitude","longitude","coords","placesService","maps","places","PlacesService","document","createElement","request","location","LatLng","radius","type","rankBy","RankBy","PROMINENCE","nearbySearch","results","status","pagination","PlacesServiceStatus","OK","filteredRestaurants","filter","restaurant","rating","user_ratings_total","setState","slice","hasNextPage","console","error","loadNextRestaurants","pagetoken","prevState","componentDidMount","navigator","geolocation","getCurrentPosition","log","render","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","index","margin","textAlign","width","photos","length","src","getUrl","alt","name","height","marginBottom","fontWeight","marginTop","onClick","padding","backgroundColor","color","border","borderRadius","cursor","apiKey"],"sources":["/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass NearbyRestaurants extends Component {\n  state = {\n    bestRestaurants: [],\n    nextPageToken: null // Initialize nextPageToken state\n  };\n\n  componentDidMount() {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  searchNearbyRestaurants = (position) => {\n    const { google } = this.props;\n    const { latitude, longitude } = position.coords;\n\n    // Create a PlacesService instance\n    const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n    // Define search parameters\n    const request = {\n      location: new google.maps.LatLng(latitude, longitude),\n      radius: 1000, // Search radius in meters (adjust as needed)\n      type: 'restaurant',\n      rankBy: google.maps.places.RankBy.PROMINENCE // Sort by prominence\n    };\n\n    // Perform nearby search\n    placesService.nearbySearch(request, (results, status, pagination) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        // Filter restaurants with 4+ stars and 50+ reviews\n        const filteredRestaurants = results.filter(restaurant => {\n          return restaurant.rating >= 4 && restaurant.user_ratings_total >= 30;\n        });\n\n        // Update state with the filtered restaurants and nextPageToken\n        this.setState({ bestRestaurants: filteredRestaurants.slice(0, 3), nextPageToken: pagination.hasNextPage ? pagination.nextPageToken : null });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  }\n\n  loadNextRestaurants = () => {\n    const { google } = this.props;\n    const { nextPageToken } = this.state;\n\n    // If nextPageToken is available, fetch the next page of restaurants\n    if (nextPageToken) {\n      const placesService = new google.maps.places.PlacesService(document.createElement('div'));\n\n      // Define search parameters for the next page\n      const request = {\n        pagetoken: nextPageToken\n      };\n\n      // Perform nearby search for the next page\n      placesService.nearbySearch(request, (results, status, pagination) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          // Filter restaurants with 4+ stars and 50+ reviews\n          const filteredRestaurants = results.filter(restaurant => {\n            return restaurant.rating >= 4 && restaurant.user_ratings_total >= 30;\n          });\n\n          // Update state with the next page of restaurants and nextPageToken\n          this.setState(prevState => ({\n            bestRestaurants: [...prevState.bestRestaurants, ...filteredRestaurants],\n            nextPageToken: pagination.hasNextPage ? pagination.nextPageToken : null\n          }));\n        } else {\n          console.error('Error fetching nearby restaurants:', status);\n        }\n      });\n    }\n  }\n\n  render() {\n    const { bestRestaurants } = this.state;\n\n    return (\n      <div>\n        <h2>Top Nearby Restaurants with 4+ Stars and 50+ Reviews</h2>\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n          {bestRestaurants.map((restaurant, index) => (\n            <div key={index} style={{ margin: '10px', textAlign: 'center', width: '200px' }}>\n              <div>\n                {restaurant.photos && restaurant.photos.length > 0 && (\n                  <>\n                    <img src={restaurant.photos[0].getUrl()} alt={restaurant.name} style={{ width: '100%', height: 'auto', marginBottom: '5px' }} />\n                    {restaurant.photos.length > 1 && (\n                      <img src={restaurant.photos[1].getUrl()} alt={restaurant.name} style={{ width: '100%', height: 'auto', marginBottom: '5px' }} />\n                    )}\n                  </>\n                )}\n              </div>\n              <p style={{ fontWeight: 'bold', marginTop: '0' }}>{restaurant.name}</p>\n              <p>{restaurant.rating} stars ({restaurant.user_ratings_total} reviews)</p>\n            </div>\n          ))}\n        </div>\n        {this.state.nextPageToken && (\n          <button onClick={this.loadNextRestaurants} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#ff5722', color: 'black', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>\n            Hit me up for more restaurants!\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}