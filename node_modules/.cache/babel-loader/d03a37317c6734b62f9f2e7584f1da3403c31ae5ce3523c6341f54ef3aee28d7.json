{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const FisheyeImage=_ref=>{let{svgContent}=_ref;const canvasRef=useRef(null);const size=500;// Size of the canvas\nuseEffect(()=>{// Defines background canvas\nconst canvas=canvasRef.current;const ctx=canvas.getContext('2d');// Loads 2d drawer\n// Create an image from the SVG content\nconst img=new Image();const svgBlob=new Blob([svgContent],{type:'image/svg+xml;charset=utf-8'});const url=URL.createObjectURL(svgBlob);img.onload=function(){// Draw the original image\nctx.drawImage(img,0,0,size,size);// Get image data\nconst imageData=ctx.getImageData(0,0,size,size);const pixels=imageData.data;const pixelsCopy=[];// Copy pixels\nfor(let i=0;i<pixels.length;i+=4){// 4 consequtive \"pixels\" represents a pixel (RGBA)\npixelsCopy.push([pixels[i],pixels[i+1],pixels[i+2],pixels[i+3]]);}// Apply fisheye effect\nconst result=fisheye(pixelsCopy,size,size);// Update image data\nfor(let i=0;i<result.length;i++){const index=i*4;if(result[i]!==undefined){pixels[index]=result[i][0];pixels[index+1]=result[i][1];pixels[index+2]=result[i][2];pixels[index+3]=result[i][3];}}// Put the modified image data back to the canvas\nctx.putImageData(imageData,0,0);};img.src=url;return()=>URL.revokeObjectURL(url);},[svgContent]);function fisheye(srcpixels,w,h){const dstpixels=srcpixels.slice();const centerX=w/2;const centerY=h/2;const radius=Math.min(w,h)/1.8;// adjusted radius divider for fitting\nfor(let y=0;y<h;y++){for(let x=0;x<w;x++){// Calculates distance from the center\nconst dx=x-centerX;const dy=y-centerY;const distance=Math.sqrt(dx*dx+dy*dy);// For pixels smaller than the radius\nif(distance<radius){const percent=Math.pow(distance*1/radius,1);const xStretch=1.1;// 1.2 point less streatch multiplyer\nconst yStretch=0.9;// Source Index, the larger the percent(closer to 1) the less of a streach (sourcing from closer one)\nconst newX=dx*percent*xStretch+centerX;const newY=dy*percent*yStretch+centerY;const srcIndex=Math.floor(newY)*w+Math.floor(newX);const dstIndex=y*w+x;if(srcIndex>=0&&srcIndex<w*h){dstpixels[dstIndex]=srcpixels[srcIndex];}}}}return dstpixels;}return/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:size,height:size});};export default FisheyeImage;","map":{"version":3,"names":["React","useEffect","useRef","jsx","_jsx","FisheyeImage","_ref","svgContent","canvasRef","size","canvas","current","ctx","getContext","img","Image","svgBlob","Blob","type","url","URL","createObjectURL","onload","drawImage","imageData","getImageData","pixels","data","pixelsCopy","i","length","push","result","fisheye","index","undefined","putImageData","src","revokeObjectURL","srcpixels","w","h","dstpixels","slice","centerX","centerY","radius","Math","min","y","x","dx","dy","distance","sqrt","percent","pow","xStretch","yStretch","newX","newY","srcIndex","floor","dstIndex","ref","width","height"],"sources":["/Users/friday/Documents/w2e/frontend/src/components/FisheyeImage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst FisheyeImage = ({ svgContent }) => {\n  const canvasRef = useRef(null);\n  const size = 500; // Size of the canvas\n\n  useEffect(() => {\n    // Defines background canvas\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d'); // Loads 2d drawer\n\n    // Create an image from the SVG content\n    const img = new Image();\n    const svgBlob = new Blob([svgContent], { type: 'image/svg+xml;charset=utf-8' });\n    const url = URL.createObjectURL(svgBlob);\n\n    img.onload = function() {\n\n\n      // Draw the original image\n      ctx.drawImage(img, 0, 0, size, size);\n\n      // Get image data\n      const imageData = ctx.getImageData(0, 0, size, size);\n      const pixels = imageData.data;\n      const pixelsCopy = [];\n\n      // Copy pixels\n      for (let i = 0; i < pixels.length; i += 4) { // 4 consequtive \"pixels\" represents a pixel (RGBA)\n        pixelsCopy.push([pixels[i], pixels[i+1], pixels[i+2], pixels[i+3]]);\n      }\n\n      // Apply fisheye effect\n      const result = fisheye(pixelsCopy, size, size);\n\n      // Update image data\n      for (let i = 0; i < result.length; i++) {\n        const index = i * 4;\n        if (result[i] !== undefined) {\n          pixels[index] = result[i][0];\n          pixels[index + 1] = result[i][1];\n          pixels[index + 2] = result[i][2];\n          pixels[index + 3] = result[i][3];\n        }\n      }\n\n      // Put the modified image data back to the canvas\n      ctx.putImageData(imageData, 0, 0);\n    };\n\n    img.src = url;\n\n    return () => URL.revokeObjectURL(url);\n  }, [svgContent]);\n\n  function fisheye(srcpixels, w, h) {\n    const dstpixels = srcpixels.slice();\n    const centerX = w / 2;\n    const centerY = h / 2;\n    const radius = Math.min(w, h) / 1.8; // adjusted radius divider for fitting\n\n    for (let y = 0; y < h; y++) {\n      for (let x = 0; x < w; x++) {\n        // Calculates distance from the center\n        const dx = x - centerX;\n        const dy = y - centerY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        // For pixels smaller than the radius\n        if (distance < radius) {\n          const percent = Math.pow(distance*1 / radius, 1);\n          const xStretch = 1.1 // 1.2 point less streatch multiplyer\n          const yStretch = 0.9\n          // Source Index, the larger the percent(closer to 1) the less of a streach (sourcing from closer one)\n          const newX = dx * percent * xStretch + centerX;\n          const newY = dy * percent * yStretch + centerY;\n          \n          const srcIndex = Math.floor(newY) * w + Math.floor(newX);\n          const dstIndex = y * w + x;\n          \n          if (srcIndex >= 0 && srcIndex < w * h) {\n            dstpixels[dstIndex] = srcpixels[srcIndex];\n          }\n        }\n      }\n    }\n    return dstpixels;\n  }\n\n  return <canvas ref={canvasRef} width={size} height={size} />;\n};\n\nexport default FisheyeImage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAoB,IAAnB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CAClC,KAAM,CAAAE,SAAS,CAAGN,MAAM,CAAC,IAAI,CAAC,CAC9B,KAAM,CAAAO,IAAI,CAAG,GAAG,CAAE;AAElBR,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAS,MAAM,CAAGF,SAAS,CAACG,OAAO,CAChC,KAAM,CAAAC,GAAG,CAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC,CAAE;AAErC;AACA,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,KAAK,CAAC,CAAC,CACvB,KAAM,CAAAC,OAAO,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACV,UAAU,CAAC,CAAE,CAAEW,IAAI,CAAE,6BAA8B,CAAC,CAAC,CAC/E,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACL,OAAO,CAAC,CAExCF,GAAG,CAACQ,MAAM,CAAG,UAAW,CAGtB;AACAV,GAAG,CAACW,SAAS,CAACT,GAAG,CAAE,CAAC,CAAE,CAAC,CAAEL,IAAI,CAAEA,IAAI,CAAC,CAEpC;AACA,KAAM,CAAAe,SAAS,CAAGZ,GAAG,CAACa,YAAY,CAAC,CAAC,CAAE,CAAC,CAAEhB,IAAI,CAAEA,IAAI,CAAC,CACpD,KAAM,CAAAiB,MAAM,CAAGF,SAAS,CAACG,IAAI,CAC7B,KAAM,CAAAC,UAAU,CAAG,EAAE,CAErB;AACA,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,MAAM,CAACI,MAAM,CAAED,CAAC,EAAI,CAAC,CAAE,CAAE;AAC3CD,UAAU,CAACG,IAAI,CAAC,CAACL,MAAM,CAACG,CAAC,CAAC,CAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAEH,MAAM,CAACG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrE,CAEA;AACA,KAAM,CAAAG,MAAM,CAAGC,OAAO,CAACL,UAAU,CAAEnB,IAAI,CAAEA,IAAI,CAAC,CAE9C;AACA,IAAK,GAAI,CAAAoB,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGG,MAAM,CAACF,MAAM,CAAED,CAAC,EAAE,CAAE,CACtC,KAAM,CAAAK,KAAK,CAAGL,CAAC,CAAG,CAAC,CACnB,GAAIG,MAAM,CAACH,CAAC,CAAC,GAAKM,SAAS,CAAE,CAC3BT,MAAM,CAACQ,KAAK,CAAC,CAAGF,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAC5BH,MAAM,CAACQ,KAAK,CAAG,CAAC,CAAC,CAAGF,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAChCH,MAAM,CAACQ,KAAK,CAAG,CAAC,CAAC,CAAGF,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAChCH,MAAM,CAACQ,KAAK,CAAG,CAAC,CAAC,CAAGF,MAAM,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAClC,CACF,CAEA;AACAjB,GAAG,CAACwB,YAAY,CAACZ,SAAS,CAAE,CAAC,CAAE,CAAC,CAAC,CACnC,CAAC,CAEDV,GAAG,CAACuB,GAAG,CAAGlB,GAAG,CAEb,MAAO,IAAMC,GAAG,CAACkB,eAAe,CAACnB,GAAG,CAAC,CACvC,CAAC,CAAE,CAACZ,UAAU,CAAC,CAAC,CAEhB,QAAS,CAAA0B,OAAOA,CAACM,SAAS,CAAEC,CAAC,CAAEC,CAAC,CAAE,CAChC,KAAM,CAAAC,SAAS,CAAGH,SAAS,CAACI,KAAK,CAAC,CAAC,CACnC,KAAM,CAAAC,OAAO,CAAGJ,CAAC,CAAG,CAAC,CACrB,KAAM,CAAAK,OAAO,CAAGJ,CAAC,CAAG,CAAC,CACrB,KAAM,CAAAK,MAAM,CAAGC,IAAI,CAACC,GAAG,CAACR,CAAC,CAAEC,CAAC,CAAC,CAAG,GAAG,CAAE;AAErC,IAAK,GAAI,CAAAQ,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGR,CAAC,CAAEQ,CAAC,EAAE,CAAE,CAC1B,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGV,CAAC,CAAEU,CAAC,EAAE,CAAE,CAC1B;AACA,KAAM,CAAAC,EAAE,CAAGD,CAAC,CAAGN,OAAO,CACtB,KAAM,CAAAQ,EAAE,CAAGH,CAAC,CAAGJ,OAAO,CACtB,KAAM,CAAAQ,QAAQ,CAAGN,IAAI,CAACO,IAAI,CAACH,EAAE,CAAGA,EAAE,CAAGC,EAAE,CAAGA,EAAE,CAAC,CAC7C;AACA,GAAIC,QAAQ,CAAGP,MAAM,CAAE,CACrB,KAAM,CAAAS,OAAO,CAAGR,IAAI,CAACS,GAAG,CAACH,QAAQ,CAAC,CAAC,CAAGP,MAAM,CAAE,CAAC,CAAC,CAChD,KAAM,CAAAW,QAAQ,CAAG,GAAG,CAAC;AACrB,KAAM,CAAAC,QAAQ,CAAG,GAAG,CACpB;AACA,KAAM,CAAAC,IAAI,CAAGR,EAAE,CAAGI,OAAO,CAAGE,QAAQ,CAAGb,OAAO,CAC9C,KAAM,CAAAgB,IAAI,CAAGR,EAAE,CAAGG,OAAO,CAAGG,QAAQ,CAAGb,OAAO,CAE9C,KAAM,CAAAgB,QAAQ,CAAGd,IAAI,CAACe,KAAK,CAACF,IAAI,CAAC,CAAGpB,CAAC,CAAGO,IAAI,CAACe,KAAK,CAACH,IAAI,CAAC,CACxD,KAAM,CAAAI,QAAQ,CAAGd,CAAC,CAAGT,CAAC,CAAGU,CAAC,CAE1B,GAAIW,QAAQ,EAAI,CAAC,EAAIA,QAAQ,CAAGrB,CAAC,CAAGC,CAAC,CAAE,CACrCC,SAAS,CAACqB,QAAQ,CAAC,CAAGxB,SAAS,CAACsB,QAAQ,CAAC,CAC3C,CACF,CACF,CACF,CACA,MAAO,CAAAnB,SAAS,CAClB,CAEA,mBAAOtC,IAAA,WAAQ4D,GAAG,CAAExD,SAAU,CAACyD,KAAK,CAAExD,IAAK,CAACyD,MAAM,CAAEzD,IAAK,CAAE,CAAC,CAC9D,CAAC,CAED,cAAe,CAAAJ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}