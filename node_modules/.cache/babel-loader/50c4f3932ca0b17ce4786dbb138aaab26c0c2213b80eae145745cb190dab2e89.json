{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/w2e/frontend/src/components/NearbyRestaurants.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useJsApiLoader, GoogleMap } from '@react-google-maps/api';\nimport './style.css';\n// import './mag.css';\nimport nlp from 'compromise';\nimport FisheyeImage from './FisheyeImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NearbyRestaurants() {\n  _s();\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries: ['places']\n  });\n  const [bestRestaurants, setBestRestaurants] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState(null);\n  const [showMapModal, setShowMapModal] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showFirstPage, setShowFirstPage] = useState(true);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [restReady, setRestReady] = useState(false);\n  const [mostRepeatedNouns, setMostRepeatedNouns] = useState([]);\n  const [travelTimes, setTravelTimes] = useState({});\n  useEffect(() => {\n    if (isLoaded && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }, [isLoaded]);\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Radius of the earth in km\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in km\n    return distance;\n  };\n  const deg2rad = deg => {\n    return deg * (Math.PI / 180);\n  };\n  const estimateWalkingTime = distanceKm => {\n    const walkingSpeedKmPerHour = 5; // Average walking speed\n    const timeHours = distanceKm / walkingSpeedKmPerHour;\n    const timeMinutes = Math.round(timeHours * 60);\n    return timeMinutes;\n  };\n  const calculateTravelTimes = useCallback((restaurants, origin) => {\n    const newTravelTimes = {};\n    restaurants.forEach(restaurant => {\n      const startLat = origin.lat;\n      const startLng = origin.lng;\n      const endLat = restaurant.geometry.location.lat();\n      const endLng = restaurant.geometry.location.lng();\n      const distanceKm = calculateDistance(startLat, startLng, endLat, endLng);\n      const walkingTimeMinutes = estimateWalkingTime(distanceKm);\n      newTravelTimes[restaurant.place_id] = `~${walkingTimeMinutes * 1.5} min (${distanceKm.toFixed(2)} km)`;\n      // Tried walking. Raw walking time *1.5 seems to be working fine.\n    });\n    setTravelTimes(newTravelTimes);\n  }, []);\n  const fetchMoreReviews = useCallback(nextPageToken => {\n    return new Promise((resolve, reject) => {\n      const placesService = new window.google.maps.places.PlacesService(document.createElement('div'));\n      const additionalRequest = {\n        nextPageToken: nextPageToken\n      };\n      placesService.getDetails(additionalRequest, (placeDetails, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          const additionalReviews = placeDetails.reviews || [];\n          const additionalReviewTexts = additionalReviews.map(review => review.text);\n          resolve(additionalReviewTexts);\n        } else {\n          console.error('Error fetching additional reviews:', status);\n          reject();\n        }\n      });\n    });\n  }, []);\n  const searchNearbyRestaurants = useCallback(position => {\n    const {\n      latitude,\n      longitude\n    } = position.coords;\n    setCurrentLocation({\n      lat: latitude,\n      lng: longitude\n    });\n    const placesService = new window.google.maps.places.PlacesService(document.createElement('div'));\n    const request = {\n      location: new window.google.maps.LatLng(latitude, longitude),\n      radius: 1000,\n      type: 'restaurant',\n      rankBy: window.google.maps.places.RankBy.PROMINENCE,\n      types: ['restaurant']\n    };\n    placesService.nearbySearch(request, (results, status, pagination) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        const filteredRestaurants = results.filter(restaurant => {\n          return restaurant.rating >= 4.0 && restaurant.user_ratings_total >= 30 && !restaurant.name.toLowerCase().includes('hotel');\n        });\n        const promises = filteredRestaurants.map(restaurant => {\n          return new Promise((resolve, reject) => {\n            const detailsRequest = {\n              placeId: restaurant.place_id,\n              fields: ['name', 'types', 'reviews', 'price_level', 'formatted_address']\n            };\n            placesService.getDetails(detailsRequest, (placeDetails, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const topReview = placeDetails.reviews && placeDetails.reviews.length > 0 ? placeDetails.reviews[0] : 'null';\n                resolve({\n                  ...restaurant,\n                  topReview\n                });\n              } else {\n                console.error('Error fetching restaurant details:', status);\n                reject(status);\n              }\n            });\n          });\n        });\n        const reviewPromises = filteredRestaurants.map(restaurant => {\n          return new Promise((resolve, reject) => {\n            const detailsRequest = {\n              placeId: restaurant.place_id,\n              fields: ['reviews']\n            };\n            placesService.getDetails(detailsRequest, (placeDetails, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const reviews = placeDetails.reviews || [];\n                const reviewTexts = reviews.map(review => review.text);\n                if (placeDetails.next_page_token) {\n                  fetchMoreReviews(placeDetails.next_page_token).then(additionalReviews => {\n                    resolve([...reviewTexts, ...additionalReviews]);\n                  }).catch(error => {\n                    console.error('Error fetching additional reviews:', error);\n                    resolve(reviewTexts);\n                  });\n                } else {\n                  resolve(reviewTexts);\n                }\n              } else {\n                console.error('Error fetching reviews for restaurant:', status);\n                reject();\n              }\n            });\n          });\n        });\n        Promise.all([...promises, ...reviewPromises]).then(results => {\n          const restaurantsWithReviews = results.slice(0, promises.length);\n          const reviewTextsArray = results.slice(promises.length);\n          setBestRestaurants(restaurantsWithReviews);\n          calculateTravelTimes(restaurantsWithReviews, {\n            lat: latitude,\n            lng: longitude\n          });\n          setRestReady(true);\n          const newMostRepeatedNouns = reviewTextsArray.map(reviewTexts => {\n            const allReviewsText = [].concat.apply([], reviewTexts);\n            const giantString = allReviewsText.join(' ');\n            const doc = nlp(giantString);\n            const nouns = doc.nouns().out('array');\n            const exclusionList = [\"i\", \"you\", \"he\", \"she\", \"it\", \"we\", \"they\", \"me\", \"him\", \"her\", \"us\", \"them\", \"my\", \"your\", \"his\", \"its\", \"our\", \"their\", \"mine\", \"yours\", \"hers\", \"ours\", \"theirs\", \"a\", \"an\", \"the\"];\n            const customExclusionList = [\"food\", \"place\", \"staff\", \"won\", \"bad\", \"great\", \"and\", \"this\", \"that\"];\n            const individualNouns = nouns.flatMap(phrase => phrase.toLowerCase().split(/\\W+/)).filter(word => word && !exclusionList.includes(word) && !customExclusionList.includes(word));\n            const nounCounts = {};\n            individualNouns.forEach(noun => {\n              nounCounts[noun] = (nounCounts[noun] || 0) + 1;\n            });\n            let mostRepeatedNoun;\n            let maxCount = 0;\n            Object.entries(nounCounts).forEach(([noun, count]) => {\n              if (count > maxCount) {\n                mostRepeatedNoun = noun;\n                maxCount = count;\n              }\n            });\n            return mostRepeatedNoun || '';\n          });\n          setMostRepeatedNouns(newMostRepeatedNouns);\n        }).catch(error => {\n          console.error('Error fetching restaurant details:', error);\n        });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  }, [fetchMoreReviews]);\n  const moveToNextRestaurant = useCallback(() => {\n    setCurrentIndex(prevIndex => prevIndex + 1);\n  }, []);\n  const handlePrevious = useCallback(() => {\n    setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : 0);\n  }, []);\n  const handleButtonClick = useCallback(() => {\n    setIsSpinning(prevState => !prevState);\n    setTimeout(() => {\n      setShowFirstPage(false);\n    }, 3000);\n  }, []);\n  const renderFirstPage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `${isSpinning ? 'spinning-text' : ''} custom-heading`,\n        style: {\n          marginTop: '50px',\n          fontSize: '200px'\n        },\n        children: \"W2E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"custom-body\",\n        onClick: handleButtonClick,\n        style: {\n          marginTop: '20px',\n          padding: '10px',\n          backgroundColor: '#ff5722',\n          color: 'black',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  };\n  const renderRestaurantPage = () => {\n    const restaurant = bestRestaurants[currentIndex] || {};\n    const travelTime = travelTimes[restaurant.place_id] || 'Calculating...';\n    const svgContent = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"50\">\n      <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n      <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" fill=\"orange\" font-size=\"40\">\n      ${mostRepeatedNouns[currentIndex] || ''}\n      </text>\n    </svg>`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n      },\n      children: [bestRestaurants.length - 1 >= currentIndex ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '0px',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"custom-heading\",\n          style: {\n            marginTop: '50px',\n            fontSize: '100px',\n            marginBottom: '00px'\n          },\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: '0px',\n            marginBottom: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(restaurant.name)}&query_place_id=${restaurant.place_id}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(FisheyeImage, {\n              svgContent: svgContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '0px',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"custom-heading\",\n          style: {\n            marginTop: '50px',\n            fontSize: '100px'\n          },\n          children: \"Hmm...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"custom-body\",\n          style: {\n            height: '190px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          children: \"Why don't you use Google Maps now?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"custom-heading\",\n        style: {\n          marginTop: '0px',\n          fontSize: '15px',\n          marginBottom: '20px'\n        },\n        children: [\"Price Point: \", restaurant.price_level !== undefined ? '$'.repeat(restaurant.price_level) : 'Not available']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"custom-heading\",\n        style: {\n          marginTop: '0px',\n          fontSize: '15px',\n          marginBottom: '20px'\n        },\n        children: [\"Estimated Walk: \", travelTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons\",\n        onClick: moveToNextRestaurant,\n        children: \"Next Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttons buttons.margin-top-20\",\n        onClick: handlePrevious,\n        disabled: currentIndex === 0,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  };\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 25\n  }, this);\n  return showFirstPage ? renderFirstPage() : renderRestaurantPage();\n}\n_s(NearbyRestaurants, \"2l4lfJIC0CfK0JlzsCr83F9RuJk=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = NearbyRestaurants;\nexport default NearbyRestaurants;\nvar _c;\n$RefreshReg$(_c, \"NearbyRestaurants\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useJsApiLoader","GoogleMap","nlp","FisheyeImage","jsxDEV","_jsxDEV","NearbyRestaurants","_s","isLoaded","id","googleMapsApiKey","process","env","REACT_APP_API_KEY","libraries","bestRestaurants","setBestRestaurants","nextPageToken","setNextPageToken","showMapModal","setShowMapModal","currentLocation","setCurrentLocation","currentIndex","setCurrentIndex","showFirstPage","setShowFirstPage","isSpinning","setIsSpinning","restReady","setRestReady","mostRepeatedNouns","setMostRepeatedNouns","travelTimes","setTravelTimes","navigator","geolocation","getCurrentPosition","searchNearbyRestaurants","console","log","calculateDistance","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","distance","deg","PI","estimateWalkingTime","distanceKm","walkingSpeedKmPerHour","timeHours","timeMinutes","round","calculateTravelTimes","restaurants","origin","newTravelTimes","forEach","restaurant","startLat","lat","startLng","lng","endLat","geometry","location","endLng","walkingTimeMinutes","place_id","toFixed","fetchMoreReviews","Promise","resolve","reject","placesService","window","google","maps","places","PlacesService","document","createElement","additionalRequest","getDetails","placeDetails","status","PlacesServiceStatus","OK","additionalReviews","reviews","additionalReviewTexts","map","review","text","error","position","latitude","longitude","coords","request","LatLng","radius","type","rankBy","RankBy","PROMINENCE","types","nearbySearch","results","pagination","filteredRestaurants","filter","rating","user_ratings_total","name","toLowerCase","includes","promises","detailsRequest","placeId","fields","topReview","length","reviewPromises","reviewTexts","next_page_token","then","catch","all","restaurantsWithReviews","slice","reviewTextsArray","newMostRepeatedNouns","allReviewsText","concat","apply","giantString","join","doc","nouns","out","exclusionList","customExclusionList","individualNouns","flatMap","phrase","split","word","nounCounts","noun","mostRepeatedNoun","maxCount","Object","entries","count","moveToNextRestaurant","prevIndex","handlePrevious","handleButtonClick","prevState","setTimeout","renderFirstPage","style","display","flexDirection","alignItems","justifyContent","height","children","className","marginTop","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onClick","padding","backgroundColor","color","border","borderRadius","cursor","renderRestaurantPage","travelTime","svgContent","marginBottom","href","encodeURIComponent","target","rel","price_level","undefined","repeat","disabled","_c","$RefreshReg$"],"sources":["/Users/friday/Documents/w2e/frontend/src/components/NearbyRestaurants.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useJsApiLoader, GoogleMap } from '@react-google-maps/api';\nimport './style.css';\n// import './mag.css';\nimport nlp from 'compromise';\nimport FisheyeImage from './FisheyeImage';\n\nfunction NearbyRestaurants() {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: process.env.REACT_APP_API_KEY,\n    libraries: ['places']\n  });\n\n  const [bestRestaurants, setBestRestaurants] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState(null);\n  const [showMapModal, setShowMapModal] = useState(false);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [showFirstPage, setShowFirstPage] = useState(true);\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [restReady, setRestReady] = useState(false);\n  const [mostRepeatedNouns, setMostRepeatedNouns] = useState([]);\n  const [travelTimes, setTravelTimes] = useState({});\n\n  useEffect(() => {\n    if (isLoaded && navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(searchNearbyRestaurants);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }, [isLoaded]);\n\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371; // Radius of the earth in km\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a = \n      Math.sin(dLat/2) * Math.sin(dLat/2) +\n      Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n      Math.sin(dLon/2) * Math.sin(dLon/2)\n    ; \n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n    const distance = R * c; // Distance in km\n    return distance;\n  };\n  \n  const deg2rad = (deg) => {\n    return deg * (Math.PI/180);\n  };\n  \n  const estimateWalkingTime = (distanceKm) => {\n    const walkingSpeedKmPerHour = 5; // Average walking speed\n    const timeHours = distanceKm / walkingSpeedKmPerHour;\n    const timeMinutes = Math.round(timeHours * 60);\n    return timeMinutes;\n  };\n  \n  const calculateTravelTimes = useCallback((restaurants, origin) => {\n    const newTravelTimes = {};\n    \n    restaurants.forEach((restaurant) => {\n      const startLat = origin.lat;\n      const startLng = origin.lng;\n      const endLat = restaurant.geometry.location.lat();\n      const endLng = restaurant.geometry.location.lng();\n      \n      const distanceKm = calculateDistance(startLat, startLng, endLat, endLng);\n      const walkingTimeMinutes = estimateWalkingTime(distanceKm);\n      \n      newTravelTimes[restaurant.place_id] = `~${walkingTimeMinutes*1.5} min (${distanceKm.toFixed(2)} km)`;\n      // Tried walking. Raw walking time *1.5 seems to be working fine.\n    });\n    \n    setTravelTimes(newTravelTimes);\n  }, []);\n\n  const fetchMoreReviews = useCallback((nextPageToken) => {\n    return new Promise((resolve, reject) => {\n      const placesService = new window.google.maps.places.PlacesService(document.createElement('div'));\n      const additionalRequest = { nextPageToken: nextPageToken };\n      placesService.getDetails(additionalRequest, (placeDetails, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          const additionalReviews = placeDetails.reviews || [];\n          const additionalReviewTexts = additionalReviews.map(review => review.text);\n          resolve(additionalReviewTexts);\n        } else {\n          console.error('Error fetching additional reviews:', status);\n          reject();\n        }\n      });\n    });\n  }, []);\n\n  const searchNearbyRestaurants = useCallback((position) => {\n    const { latitude, longitude } = position.coords;\n    setCurrentLocation({ lat: latitude, lng: longitude });\n\n    const placesService = new window.google.maps.places.PlacesService(document.createElement('div'));\n\n    const request = {\n      location: new window.google.maps.LatLng(latitude, longitude),\n      radius: 1000,\n      type: 'restaurant',\n      rankBy: window.google.maps.places.RankBy.PROMINENCE,\n      types: ['restaurant']\n    };\n\n    placesService.nearbySearch(request, (results, status, pagination) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        const filteredRestaurants = results.filter(restaurant => {\n          return restaurant.rating >= 4.0 && restaurant.user_ratings_total >= 30 &&\n           !restaurant.name.toLowerCase().includes('hotel');\n        });\n\n        const promises = filteredRestaurants.map(restaurant => {\n          return new Promise((resolve, reject) => {\n            const detailsRequest = {\n              placeId: restaurant.place_id,\n              fields: ['name', 'types', 'reviews', 'price_level', 'formatted_address'],\n            };\n            placesService.getDetails(detailsRequest, (placeDetails, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const topReview = placeDetails.reviews && placeDetails.reviews.length > 0 ? placeDetails.reviews[0] : 'null';\n                resolve({ ...restaurant, topReview });\n              } else {\n                console.error('Error fetching restaurant details:', status);\n                reject(status);\n              }\n            });\n          });\n        });\n\n        const reviewPromises = filteredRestaurants.map(restaurant => {\n          return new Promise((resolve, reject) => {\n            const detailsRequest = {\n              placeId: restaurant.place_id,\n              fields: ['reviews']\n            };\n            placesService.getDetails(detailsRequest, (placeDetails, status) => {\n              if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n                const reviews = placeDetails.reviews || [];\n                const reviewTexts = reviews.map(review => review.text);\n                if (placeDetails.next_page_token) {\n                  fetchMoreReviews(placeDetails.next_page_token)\n                    .then(additionalReviews => {\n                      resolve([...reviewTexts, ...additionalReviews]);\n                    })\n                    .catch(error => {\n                      console.error('Error fetching additional reviews:', error);\n                      resolve(reviewTexts);\n                    });\n                } else {\n                  resolve(reviewTexts);\n                }\n              } else {\n                console.error('Error fetching reviews for restaurant:', status);\n                reject();\n              }\n            });\n          });\n        });\n\n        Promise.all([...promises, ...reviewPromises])\n          .then(results => {\n            const restaurantsWithReviews = results.slice(0, promises.length);\n            const reviewTextsArray = results.slice(promises.length);\n            setBestRestaurants(restaurantsWithReviews);\n            calculateTravelTimes(restaurantsWithReviews, { lat: latitude, lng: longitude });\n            setRestReady(true);\n\n            const newMostRepeatedNouns = reviewTextsArray.map((reviewTexts) => {\n              const allReviewsText = [].concat.apply([], reviewTexts);\n              const giantString = allReviewsText.join(' ');\n              const doc = nlp(giantString);\n              const nouns = doc.nouns().out('array');\n\n              const exclusionList = [\"i\", \"you\", \"he\", \"she\", \"it\", \"we\", \"they\", \"me\", \"him\", \"her\", \"us\", \"them\", \"my\", \"your\", \"his\", \"its\", \"our\", \"their\", \"mine\", \"yours\", \"hers\", \"ours\", \"theirs\", \"a\", \"an\", \"the\"];\n              const customExclusionList = [ \"food\", \"place\", \"staff\", \"won\", \"bad\", \"great\", \"and\", \"this\", \"that\"];\n              \n              const individualNouns = nouns.flatMap(phrase => phrase.toLowerCase().split(/\\W+/))\n                                            .filter(word => word && !exclusionList.includes(word) && !customExclusionList.includes(word));\n              \n              const nounCounts = {};\n              individualNouns.forEach(noun => {\n                nounCounts[noun] = (nounCounts[noun] || 0) + 1;\n              });\n\n              let mostRepeatedNoun;\n              let maxCount = 0;\n              Object.entries(nounCounts).forEach(([noun, count]) => {\n                if (count > maxCount) {\n                  mostRepeatedNoun = noun;\n                  maxCount = count;\n                }\n              });\n\n              return mostRepeatedNoun || '';\n            });\n\n            setMostRepeatedNouns(newMostRepeatedNouns);\n          })\n          .catch(error => {\n            console.error('Error fetching restaurant details:', error);\n          });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  }, [fetchMoreReviews]);\n\n  const moveToNextRestaurant = useCallback(() => {\n    setCurrentIndex(prevIndex => prevIndex + 1);\n  }, []);\n\n  const handlePrevious = useCallback(() => {\n    setCurrentIndex(prevIndex => prevIndex > 0 ? prevIndex - 1 : 0);\n  }, []);\n\n  const handleButtonClick = useCallback(() => {\n    setIsSpinning(prevState => !prevState);\n    setTimeout(() => {\n      setShowFirstPage(false);\n    }, 3000);\n  }, []);\n\n  const renderFirstPage = () => {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n        <h1 className={`${isSpinning ? 'spinning-text' : ''} custom-heading`} style={{ marginTop: '50px', fontSize: '200px' }}>W2E</h1>\n        <button className=\"custom-body\" onClick={handleButtonClick} style={{ marginTop: '20px', padding: '10px', backgroundColor: '#ff5722', color: 'black', border: 'none', borderRadius: '5px', cursor: 'pointer' }}>Start</button>\n      </div>\n    );\n  };\n\n  const renderRestaurantPage = () => {\n    const restaurant = bestRestaurants[currentIndex] || {};\n    const travelTime = travelTimes[restaurant.place_id] || 'Calculating...';\n    const svgContent = `\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"50\">\n      <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n      <text x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\" fill=\"orange\" font-size=\"40\">\n      ${mostRepeatedNouns[currentIndex] || ''}\n      </text>\n    </svg>`;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {bestRestaurants.length - 1 >= currentIndex ? (\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '0px', marginBottom: '0px' }}>\n            <h1 className=\"custom-heading\" style={{ marginTop: '50px', fontSize: '100px', marginBottom: '00px'}}>{restaurant.name}</h1>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '0px', marginBottom: '0px' }}>\n              <a href={`https://www.google.com/maps/search/?api=1&query=${encodeURIComponent(restaurant.name)}&query_place_id=${restaurant.place_id}`} \n                 target=\"_blank\" \n                 rel=\"noopener noreferrer\">\n                <FisheyeImage svgContent={svgContent} />\n              </a>\n            </div>\n          </div>\n        ) : (\n          <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '0px', marginBottom: '0px' }}>\n            <h1 className=\"custom-heading\" style={{ marginTop: '50px', fontSize: '100px' }}>Hmm...</h1>\n            <p className=\"custom-body\" style={{ height: '190px', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', marginTop: '20px' }}>Why don't you use Google Maps now?</p>\n          </div>\n        )}\n        <h1 className=\"custom-heading\" style={{ marginTop: '0px', fontSize: '15px', marginBottom: '20px'}}>{\"Price Point: \"}{restaurant.price_level !== undefined ? '$'.repeat(restaurant.price_level) : 'Not available'}</h1>\n        <h1 className=\"custom-heading\" style={{ marginTop: '0px', fontSize: '15px', marginBottom: '20px'}}>\n          {\"Estimated Walk: \"}{travelTime}\n        </h1>\n        <button className=\"buttons\" onClick={moveToNextRestaurant}>\n          Next Restaurant\n        </button>\n        <button className=\"buttons buttons.margin-top-20\" onClick={handlePrevious} disabled={currentIndex === 0}>\n          Previous\n        </button>\n      </div>\n    );\n  };\n\n  if (!isLoaded) return <div>Loading...</div>;\n\n  return showFirstPage ? renderFirstPage() : renderRestaurantPage();\n}\n\nexport default NearbyRestaurants;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}