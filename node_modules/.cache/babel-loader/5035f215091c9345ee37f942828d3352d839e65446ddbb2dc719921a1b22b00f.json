{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/w2e/frontend/src/components/FisheyeSVG.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FisheyeSVG = ({\n  text\n}) => {\n  _s();\n  const svgRef = useRef(null);\n  const width = 400;\n  const height = 200;\n  useEffect(() => {\n    if (svgRef.current) {\n      const svg = svgRef.current;\n      const textElement = svg.querySelector('text');\n      const rect = svg.querySelector('rect');\n\n      // Apply fisheye effect\n      const fisheye = (x, y) => {\n        const distX = x - width / 2;\n        const distY = y - height / 2;\n        const distance = Math.sqrt(distX * distX + distY * distY);\n        const maxDistance = Math.sqrt((width / 2) ** 2 + (height / 2) ** 2);\n        const scale = 1 + (1 - distance / maxDistance) * 0.5; // Adjust 0.5 for more/less distortion\n\n        return {\n          x: width / 2 + distX * scale,\n          y: height / 2 + distY * scale\n        };\n      };\n\n      // Apply fisheye effect to text\n      const applyFisheyeToText = () => {\n        const chars = text.split('');\n        const tspans = chars.map((char, i) => {\n          const x = (i + 0.5) * (width / chars.length);\n          const {\n            x: newX,\n            y: newY\n          } = fisheye(x, height / 2);\n          return `<tspan x=\"${newX}\" y=\"${newY}\">${char}</tspan>`;\n        });\n        textElement.innerHTML = tspans.join('');\n      };\n\n      // Apply fisheye effect to background\n      const applyFisheyeToBackground = () => {\n        const points = [];\n        const step = 10;\n        for (let x = 0; x <= width; x += step) {\n          for (let y = 0; y <= height; y += step) {\n            const {\n              x: newX,\n              y: newY\n            } = fisheye(x, y);\n            points.push(`${newX},${newY}`);\n          }\n        }\n        rect.setAttribute('points', points.join(' '));\n      };\n      applyFisheyeToText();\n      applyFisheyeToBackground();\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    width: width,\n    height: height,\n    children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n      width: \"100%\",\n      height: \"100%\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      fill: \"black\",\n      fontSize: \"24\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(FisheyeSVG, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = FisheyeSVG;\nexport default FisheyeSVG;\nvar _c;\n$RefreshReg$(_c, \"FisheyeSVG\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","FisheyeSVG","text","_s","svgRef","width","height","current","svg","textElement","querySelector","rect","fisheye","x","y","distX","distY","distance","Math","sqrt","maxDistance","scale","applyFisheyeToText","chars","split","tspans","map","char","i","length","newX","newY","innerHTML","join","applyFisheyeToBackground","points","step","push","setAttribute","ref","children","fill","fileName","_jsxFileName","lineNumber","columnNumber","dominantBaseline","textAnchor","fontSize","_c","$RefreshReg$"],"sources":["/Users/friday/Documents/w2e/frontend/src/components/FisheyeSVG.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst FisheyeSVG = ({ text }) => {\n  const svgRef = useRef(null);\n  const width = 400;\n  const height = 200;\n\n  useEffect(() => {\n    if (svgRef.current) {\n      const svg = svgRef.current;\n      const textElement = svg.querySelector('text');\n      const rect = svg.querySelector('rect');\n\n      // Apply fisheye effect\n      const fisheye = (x, y) => {\n        const distX = x - width / 2;\n        const distY = y - height / 2;\n        const distance = Math.sqrt(distX * distX + distY * distY);\n        const maxDistance = Math.sqrt((width / 2) ** 2 + (height / 2) ** 2);\n        const scale = 1 + (1 - distance / maxDistance) * 0.5; // Adjust 0.5 for more/less distortion\n\n        return {\n          x: width / 2 + distX * scale,\n          y: height / 2 + distY * scale,\n        };\n      };\n\n      // Apply fisheye effect to text\n      const applyFisheyeToText = () => {\n        const chars = text.split('');\n        const tspans = chars.map((char, i) => {\n          const x = (i + 0.5) * (width / chars.length);\n          const { x: newX, y: newY } = fisheye(x, height / 2);\n          return `<tspan x=\"${newX}\" y=\"${newY}\">${char}</tspan>`;\n        });\n        textElement.innerHTML = tspans.join('');\n      };\n\n      // Apply fisheye effect to background\n      const applyFisheyeToBackground = () => {\n        const points = [];\n        const step = 10;\n        for (let x = 0; x <= width; x += step) {\n          for (let y = 0; y <= height; y += step) {\n            const { x: newX, y: newY } = fisheye(x, y);\n            points.push(`${newX},${newY}`);\n          }\n        }\n        rect.setAttribute('points', points.join(' '));\n      };\n\n      applyFisheyeToText();\n      applyFisheyeToBackground();\n    }\n  }, [text]);\n\n  return (\n    <svg ref={svgRef} width={width} height={height}>\n      <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n      <text dominantBaseline=\"middle\" textAnchor=\"middle\" fill=\"black\" fontSize=\"24\" />\n    </svg>\n  );\n};\n\nexport default FisheyeSVG;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}