{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx\";\nimport React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NearbyRestaurants extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      restaurants: []\n    };\n    this.fetchNearbyRestaurants = () => {\n      const {\n        google\n      } = this.props;\n      const service = new google.maps.places.PlacesService(document.createElement('div'));\n      const request = {\n        location: this.props.google.maps.LatLng,\n        radius: 5000,\n        // Adjust the radius as needed\n        type: 'restaurant'\n      };\n      service.nearbySearch(request, (results, status) => {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          const restaurants = results.map(place => ({\n            name: place.name,\n            popularOrder: 'Your popular order here',\n            // You can get this from user reviews, for example\n            imageUrl: place.photos && place.photos[0].getUrl() // Get the first photo URL if available\n          }));\n          this.setState({\n            restaurants\n          });\n        } else {\n          console.error('Error fetching nearby restaurants:', status);\n        }\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchNearbyRestaurants();\n  }\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recommended Restaurants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), restaurants.map((restaurant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: restaurant.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Popular Order: \", restaurant.popularOrder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), restaurant.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: restaurant.imageUrl,\n          alt: `Popular order at ${restaurant.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);","map":{"version":3,"names":["React","Component","GoogleApiWrapper","jsxDEV","_jsxDEV","NearbyRestaurants","constructor","args","state","restaurants","fetchNearbyRestaurants","google","props","service","maps","places","PlacesService","document","createElement","request","location","LatLng","radius","type","nearbySearch","results","status","PlacesServiceStatus","OK","map","place","name","popularOrder","imageUrl","photos","getUrl","setState","console","error","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","restaurant","index","src","alt","apiKey"],"sources":["/Users/friday/Documents/TaskForceOrganization/frontend/src/components/NearbyRestaurants.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { GoogleApiWrapper } from 'google-maps-react';\n\nclass NearbyRestaurants extends Component {\n  state = {\n    restaurants: []\n  };\n\n  componentDidMount() {\n    this.fetchNearbyRestaurants();\n  }\n\n  fetchNearbyRestaurants = () => {\n    const { google } = this.props;\n    const service = new google.maps.places.PlacesService(document.createElement('div'));\n    const request = {\n      location: this.props.google.maps.LatLng,\n      radius: 5000, // Adjust the radius as needed\n      type: 'restaurant'\n    };\n\n    service.nearbySearch(request, (results, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        const restaurants = results.map(place => ({\n          name: place.name,\n          popularOrder: 'Your popular order here', // You can get this from user reviews, for example\n          imageUrl: place.photos && place.photos[0].getUrl() // Get the first photo URL if available\n        }));\n        this.setState({ restaurants });\n      } else {\n        console.error('Error fetching nearby restaurants:', status);\n      }\n    });\n  };\n\n  render() {\n    const { restaurants } = this.state;\n\n    return (\n      <div>\n        <h2>Recommended Restaurants</h2>\n        {restaurants.map((restaurant, index) => (\n          <div key={index}>\n            <h3>{restaurant.name}</h3>\n            <p>Popular Order: {restaurant.popularOrder}</p>\n            {restaurant.imageUrl && <img src={restaurant.imageUrl} alt={`Popular order at ${restaurant.name}`} />}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyCnv1eojLjZwtHpBXy_QZ3bSv2slXEsLyc'\n})(NearbyRestaurants);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}