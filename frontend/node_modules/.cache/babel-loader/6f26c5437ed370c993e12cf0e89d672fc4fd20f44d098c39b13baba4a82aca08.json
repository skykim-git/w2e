{"ast":null,"code":"var _jsxFileName = \"/Users/friday/Documents/w2e/frontend/src/components/TodoItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, editTodo } from 'redux/operations';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = ({\n  todo,\n  provided,\n  snapshot\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [editable, setEditable] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(todo.title);\n  const index = todo.index;\n  const deleteTask = _id => {\n    dispatch(deleteTodo(_id));\n    // toast.info('The task was deleted.');\n  };\n  const toggleTaskStatus = _id => {\n    const updatedTask = {\n      _id,\n      completed: !todo.completed\n    };\n    dispatch(editTodo(updatedTask));\n    // toast('Task status changed.');\n  };\n  const handleEdit = () => {\n    setEditable(true);\n  };\n  const handleSave = () => {\n    if (editedTitle.trim() === '') {\n      return toast.error('The field cannot be empty.');\n    }\n    if (editedTitle.trim() === todo.title) {\n      return toast.error('The task name is not changed.');\n    }\n    const updatedTask = {\n      ...todo,\n      title: editedTitle\n    };\n    dispatch(editTodo(updatedTask));\n    setEditable(false);\n    // toast.info('Task name has been changed.');\n  };\n  const handleCancel = () => {\n    setEditedTitle(todo.title);\n    setEditable(false);\n  };\n  const handleInputChange = event => {\n    setEditedTitle(event.target.value);\n  };\n  if (!todo) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: provided.innerRef,\n    snapshot: snapshot,\n    ...provided.draggableProps,\n    ...provided.dragHandleProps,\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"task\",\n      children: [editable ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-edit\",\n        type: \"text\",\n        value: editedTitle,\n        onChange: handleInputChange,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: todo.completed ? 'checked' : 'none',\n        children: String(todo.index) + \": \" + todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-wrapper\",\n        children: editable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-save\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-cancel\",\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-edit\",\n            onClick: handleEdit,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-done\",\n            onClick: () => toggleTaskStatus(todo._id),\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-delete\",\n            onClick: () => deleteTask(todo._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoItem, \"RqIvlC6lugOQhS1RGO+otfrcsAY=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","useDispatch","deleteTodo","editTodo","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","todo","provided","snapshot","_s","dispatch","editable","setEditable","editedTitle","setEditedTitle","title","index","deleteTask","_id","toggleTaskStatus","updatedTask","completed","handleEdit","handleSave","trim","error","handleCancel","handleInputChange","event","target","value","ref","innerRef","draggableProps","dragHandleProps","children","className","type","onChange","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","String","onClick","_c","$RefreshReg$"],"sources":["/Users/friday/Documents/w2e/frontend/src/components/TodoItem.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteTodo, editTodo } from 'redux/operations';\nimport { toast } from 'react-toastify';\n\nconst TodoItem = ({ todo, provided, snapshot }) => {\n  const dispatch = useDispatch();\n  const [editable, setEditable] = useState(false);\n  const [editedTitle, setEditedTitle] = useState(todo.title);\n  const index = todo.index\n\n  const deleteTask = _id => {\n    dispatch(deleteTodo(_id));\n    // toast.info('The task was deleted.');\n  };\n\n  const toggleTaskStatus = _id => {\n    const updatedTask = { _id, completed: !todo.completed };\n    dispatch(editTodo(updatedTask));\n    // toast('Task status changed.');\n  };\n\n  const handleEdit = () => {\n    setEditable(true);\n  };\n\n  const handleSave = () => {\n    if (editedTitle.trim() === '') {\n      return toast.error('The field cannot be empty.');\n    }\n\n    if (editedTitle.trim() === todo.title) {\n      return toast.error('The task name is not changed.');\n    }\n\n    const updatedTask = { ...todo, title: editedTitle };\n    dispatch(editTodo(updatedTask));\n    setEditable(false);\n    // toast.info('Task name has been changed.');\n  };\n\n  const handleCancel = () => {\n    setEditedTitle(todo.title);\n    setEditable(false);\n  };\n\n  const handleInputChange = event => {\n    setEditedTitle(event.target.value);\n  };\n\n  if (!todo) {\n    return null;\n  }\n\n  return (\n    <div\n      ref={provided.innerRef}\n      snapshot={snapshot}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n    >\n      <li className=\"task\">\n        {editable ? (\n          <input\n            className=\"input-edit\"\n            type=\"text\"\n            value={editedTitle}\n            onChange={handleInputChange}\n            autoFocus\n          />\n        ) : (\n          <span className={todo.completed ? 'checked' : 'none'}>\n            {String(todo.index) + \": \" + todo.title}\n          </span>\n        )}\n        <div className=\"btn-wrapper\">\n          {editable ? (\n            <>\n              <button className=\"btn-save\" onClick={handleSave}>\n                Save\n              </button>\n              <button className=\"btn-cancel\" onClick={handleCancel}>\n                Cancel\n              </button>\n            </>\n          ) : (\n            <>\n              <button className=\"btn-edit\" onClick={handleEdit}>\n                Edit\n              </button>\n              <button\n                className=\"btn-done\"\n                onClick={() => toggleTaskStatus(todo._id)}\n              >\n                Done\n              </button>\n              <button\n                className=\"btn-delete\"\n                onClick={() => deleteTask(todo._id)}\n              >\n                Delete\n              </button>\n            </>\n          )}\n        </div>\n      </li>\n    </div>\n  );\n};\n\nexport default TodoItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}